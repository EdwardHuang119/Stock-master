'''
    列表相关操作

    （1） 列表运算符+和
    列表对 “+” 和 “” 的操作符与字符串相似。“+”号用于组合列表，“”号用于重复列表。
    例如“示例3-006.py”。

a=[1,2,3,4]
b=['a','b','c']
c=a+b
print('c=a+b= ',c)
d=a5
print('d=',d)

    运行结果：
c=a+b=  [1, 2, 3, 4, 'a', 'b', 'c']
d= [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]

    （2）列表切片
    列表切片操作也与字符串相似。
    切片格式： 
    列表[start[end[step]]]
    中间2个中括号，表示可省略该参数。 start表示开始位置，end结束位置，step表示取值步长。
    下面看示例3-007.py。

b=[x for x in range(10)]
print('b= ',b)
print('b[0]=',b[0])
print('b[2]=',b[2])
print('b[-2]=',b[-2])
print('b[5]= ',b[5])
print('b[5]= ',b[5])
print('b[-3]= ',b[-3])
print('b[-3]= ',b[-3])
print('b[47]= ',b[47])
print('b[0103]= ',b[0103])

    运行结果：
b=  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
b[0]= 0
b[2]= 2
b[-2]= 8
b[5]=  [0, 1, 2, 3, 4]
b[5]=  [5, 6, 7, 8, 9]
b[-3]=  [7, 8, 9]
b[-3]=  [0, 1, 2, 3, 4, 5, 6]
b[47]=  [4, 5, 6]
b[0103]=  [0, 3, 6, 9]

    （3）列表in语句
    列表in语句用来判断一个元素是否在列表中存在，存在返回True，不存在返
回False。见示例3-32。
#列表in语句
print('2 in [1, 2, 3] 结果 ',2 in [1, 2, 3])

   （4）列表比较符==
    列表比较符==能够用来比较2个列表是否相同。如果相同返回True，不同返
回False。见示例3-32。
#列表比较符==
f= a==b
print('列表比较 f= a==b = ',f)

    （5） 列表嵌套
    列表能够嵌套，嵌套列表就是列表中的元素也是一个是列表。见示例3-32。
# -- coding utf-8 --
#示例3-32
#类表合并，列表操作符+
a=['a',80,12.8]
b=[1,2,3]
c=a+b
print('c= a+b = ',c)

#列表操作符
d=[1,2]
e=d3   #注意不是类表元素值3，是列表元素个数3
print('e= d3 = ',e)

#列表in语句
print('2 in [1, 2, 3] 结果 ',2 in [1, 2, 3])

#列表切片
print('切片c[2] ',c[2])
print('切片c[-2] ',c[-2])
print('切片c[1] ',c[1])

#列表比较符==
f= a==b
print('列表比较 f= a==b = ',f)

#嵌套列表
x = ['a', 'b', 'c']
y = [1, 2, 3]
z = [x, y]
print('嵌套列表z= ',z) 
程序运行结果：
c= a+b=  ['a', 80, 12.8, 1, 2, 3]
e= d3 =  [1, 2, 1, 2, 1, 2]
2 in [1, 2, 3] 结果  True
切片c[2]  12.8
切片c[-2]  2
切片c[1]  [80, 12.8, 1, 2, 3]
列表比较 f= a==b =  False
嵌套列表z=  [['a', 'b', 'c'], [1, 2, 3]] 
'''