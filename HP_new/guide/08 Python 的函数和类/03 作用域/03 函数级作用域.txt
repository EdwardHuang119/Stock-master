'''
    函数级作用域

    函数级作用域是指最小函数体的作用域。因为在Python3中，函数体内可以定义子函
数，因此这里指无定义子函数的函数体。见演示示例4-18。

#2.函数体中的作用域
s1='s1是块级定义的变量。'
def  func()
    s1='s1是函数内定义的变量。'
    print('函数内输出s1'+s1)
func()          #执行函数
print('函数外输出s1'+s1)

    程序运行结果如下：    
函数内输出s1s1是函数内定义的变量。
函数外输出s1s1是块级定义的变量。

    从运行结果我们可以看到，函数体外面定义了一个变量s1，在函数体内对变量s1进行
赋值，并显示结果为：s1是函数内定义的变量。
    函数运行结束，再次输出变量s1的值为：s1是块级定义的变量。这说明函数体外的变
量s1和函数体内的变量s1不是相同的变量，因此他们不在同一个作用域。
    再看下一个程序示例4-19。
#3.函数体中的作用域
s1='s1是块级定义的变量。'
def  func()
    print('函数内输出s1 '+s1)
func()          #执行函数
print('函数外 输出s1 '+s1)
    程序运行结果：
函数内输出s1 s1是块级定义的变量。
函数外输出s1 s1是块级定义的变量。
    从上面结果说明，函数体可以使用函数体外部定义的变量s1，但是不能修改外部变量s1。
    再看一个例子示例4-20，在函数体内定义变量s2，在函数体外使用这个变量会是什么结果？
#4.函数体中的作用域
def  func()
    s2='s2是函数级定义的变量。'
    print('函数内输出s2：'+s2)
func()          #执行函数
print('函数外输出s2'+s2)
    程序运行结果：
    print('函数外输出s2'+s2)

NameError name 's2' is not defined
    程序出错，提示变量s2没有定义，这说明函数体内定义的变量仅仅在函数体内有效，函
数运行结束，变量消失，后面再想使用这些变量时，就出现（not defined）的错误。
    因此函数体内的变量的和函数体外的变量不在一个作用域。
'''
